/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as UnauthenticatedRouteImport } from "./routes/_unauthenticated/route";
import { Route as AuthenticatedRouteImport } from "./routes/_authenticated/route";
import { Route as UnauthenticatedIndexImport } from "./routes/_unauthenticated/index";
import { Route as AuthenticatedProjectsIndexImport } from "./routes/_authenticated/projects/index";
import { Route as AuthenticatedPersonasIndexImport } from "./routes/_authenticated/personas/index";
import { Route as AuthenticatedProjectsCreateImport } from "./routes/_authenticated/projects/create";
import { Route as AuthenticatedProjectsIdImport } from "./routes/_authenticated/projects/$id";
import { Route as AuthenticatedPersonasCreateImport } from "./routes/_authenticated/personas/create";
import { Route as AuthenticatedPersonasIdImport } from "./routes/_authenticated/personas/$id";
import { Route as AuthenticatedExperimentsIdImport } from "./routes/_authenticated/experiments/$id";
import { Route as AuthenticatedProjectsEditIdImport } from "./routes/_authenticated/projects/edit.$id";
import { Route as AuthenticatedPersonasEditIdImport } from "./routes/_authenticated/personas/edit.$id";

// Create/Update Routes

const UnauthenticatedRouteRoute = UnauthenticatedRouteImport.update({
  id: "/_unauthenticated",
  getParentRoute: () => rootRoute,
} as any);

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRoute,
} as any);

const UnauthenticatedIndexRoute = UnauthenticatedIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => UnauthenticatedRouteRoute,
} as any);

const AuthenticatedProjectsIndexRoute = AuthenticatedProjectsIndexImport.update(
  {
    id: "/projects/",
    path: "/projects/",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
);

const AuthenticatedPersonasIndexRoute = AuthenticatedPersonasIndexImport.update(
  {
    id: "/personas/",
    path: "/personas/",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
);

const AuthenticatedProjectsCreateRoute =
  AuthenticatedProjectsCreateImport.update({
    id: "/projects/create",
    path: "/projects/create",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);

const AuthenticatedProjectsIdRoute = AuthenticatedProjectsIdImport.update({
  id: "/projects/$id",
  path: "/projects/$id",
  getParentRoute: () => AuthenticatedRouteRoute,
} as any);

const AuthenticatedPersonasCreateRoute =
  AuthenticatedPersonasCreateImport.update({
    id: "/personas/create",
    path: "/personas/create",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);

const AuthenticatedPersonasIdRoute = AuthenticatedPersonasIdImport.update({
  id: "/personas/$id",
  path: "/personas/$id",
  getParentRoute: () => AuthenticatedRouteRoute,
} as any);

const AuthenticatedExperimentsIdRoute = AuthenticatedExperimentsIdImport.update(
  {
    id: "/experiments/$id",
    path: "/experiments/$id",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
);

const AuthenticatedProjectsEditIdRoute =
  AuthenticatedProjectsEditIdImport.update({
    id: "/projects/edit/$id",
    path: "/projects/edit/$id",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);

const AuthenticatedPersonasEditIdRoute =
  AuthenticatedPersonasEditIdImport.update({
    id: "/personas/edit/$id",
    path: "/personas/edit/$id",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_authenticated": {
      id: "/_authenticated";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthenticatedRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_unauthenticated": {
      id: "/_unauthenticated";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof UnauthenticatedRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_unauthenticated/": {
      id: "/_unauthenticated/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof UnauthenticatedIndexImport;
      parentRoute: typeof UnauthenticatedRouteImport;
    };
    "/_authenticated/experiments/$id": {
      id: "/_authenticated/experiments/$id";
      path: "/experiments/$id";
      fullPath: "/experiments/$id";
      preLoaderRoute: typeof AuthenticatedExperimentsIdImport;
      parentRoute: typeof AuthenticatedRouteImport;
    };
    "/_authenticated/personas/$id": {
      id: "/_authenticated/personas/$id";
      path: "/personas/$id";
      fullPath: "/personas/$id";
      preLoaderRoute: typeof AuthenticatedPersonasIdImport;
      parentRoute: typeof AuthenticatedRouteImport;
    };
    "/_authenticated/personas/create": {
      id: "/_authenticated/personas/create";
      path: "/personas/create";
      fullPath: "/personas/create";
      preLoaderRoute: typeof AuthenticatedPersonasCreateImport;
      parentRoute: typeof AuthenticatedRouteImport;
    };
    "/_authenticated/projects/$id": {
      id: "/_authenticated/projects/$id";
      path: "/projects/$id";
      fullPath: "/projects/$id";
      preLoaderRoute: typeof AuthenticatedProjectsIdImport;
      parentRoute: typeof AuthenticatedRouteImport;
    };
    "/_authenticated/projects/create": {
      id: "/_authenticated/projects/create";
      path: "/projects/create";
      fullPath: "/projects/create";
      preLoaderRoute: typeof AuthenticatedProjectsCreateImport;
      parentRoute: typeof AuthenticatedRouteImport;
    };
    "/_authenticated/personas/": {
      id: "/_authenticated/personas/";
      path: "/personas";
      fullPath: "/personas";
      preLoaderRoute: typeof AuthenticatedPersonasIndexImport;
      parentRoute: typeof AuthenticatedRouteImport;
    };
    "/_authenticated/projects/": {
      id: "/_authenticated/projects/";
      path: "/projects";
      fullPath: "/projects";
      preLoaderRoute: typeof AuthenticatedProjectsIndexImport;
      parentRoute: typeof AuthenticatedRouteImport;
    };
    "/_authenticated/personas/edit/$id": {
      id: "/_authenticated/personas/edit/$id";
      path: "/personas/edit/$id";
      fullPath: "/personas/edit/$id";
      preLoaderRoute: typeof AuthenticatedPersonasEditIdImport;
      parentRoute: typeof AuthenticatedRouteImport;
    };
    "/_authenticated/projects/edit/$id": {
      id: "/_authenticated/projects/edit/$id";
      path: "/projects/edit/$id";
      fullPath: "/projects/edit/$id";
      preLoaderRoute: typeof AuthenticatedProjectsEditIdImport;
      parentRoute: typeof AuthenticatedRouteImport;
    };
  }
}

// Create and export the route tree

interface AuthenticatedRouteRouteChildren {
  AuthenticatedExperimentsIdRoute: typeof AuthenticatedExperimentsIdRoute;
  AuthenticatedPersonasIdRoute: typeof AuthenticatedPersonasIdRoute;
  AuthenticatedPersonasCreateRoute: typeof AuthenticatedPersonasCreateRoute;
  AuthenticatedProjectsIdRoute: typeof AuthenticatedProjectsIdRoute;
  AuthenticatedProjectsCreateRoute: typeof AuthenticatedProjectsCreateRoute;
  AuthenticatedPersonasIndexRoute: typeof AuthenticatedPersonasIndexRoute;
  AuthenticatedProjectsIndexRoute: typeof AuthenticatedProjectsIndexRoute;
  AuthenticatedPersonasEditIdRoute: typeof AuthenticatedPersonasEditIdRoute;
  AuthenticatedProjectsEditIdRoute: typeof AuthenticatedProjectsEditIdRoute;
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedExperimentsIdRoute: AuthenticatedExperimentsIdRoute,
  AuthenticatedPersonasIdRoute: AuthenticatedPersonasIdRoute,
  AuthenticatedPersonasCreateRoute: AuthenticatedPersonasCreateRoute,
  AuthenticatedProjectsIdRoute: AuthenticatedProjectsIdRoute,
  AuthenticatedProjectsCreateRoute: AuthenticatedProjectsCreateRoute,
  AuthenticatedPersonasIndexRoute: AuthenticatedPersonasIndexRoute,
  AuthenticatedProjectsIndexRoute: AuthenticatedProjectsIndexRoute,
  AuthenticatedPersonasEditIdRoute: AuthenticatedPersonasEditIdRoute,
  AuthenticatedProjectsEditIdRoute: AuthenticatedProjectsEditIdRoute,
};

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren);

interface UnauthenticatedRouteRouteChildren {
  UnauthenticatedIndexRoute: typeof UnauthenticatedIndexRoute;
}

const UnauthenticatedRouteRouteChildren: UnauthenticatedRouteRouteChildren = {
  UnauthenticatedIndexRoute: UnauthenticatedIndexRoute,
};

const UnauthenticatedRouteRouteWithChildren =
  UnauthenticatedRouteRoute._addFileChildren(UnauthenticatedRouteRouteChildren);

export interface FileRoutesByFullPath {
  "": typeof UnauthenticatedRouteRouteWithChildren;
  "/": typeof UnauthenticatedIndexRoute;
  "/experiments/$id": typeof AuthenticatedExperimentsIdRoute;
  "/personas/$id": typeof AuthenticatedPersonasIdRoute;
  "/personas/create": typeof AuthenticatedPersonasCreateRoute;
  "/projects/$id": typeof AuthenticatedProjectsIdRoute;
  "/projects/create": typeof AuthenticatedProjectsCreateRoute;
  "/personas": typeof AuthenticatedPersonasIndexRoute;
  "/projects": typeof AuthenticatedProjectsIndexRoute;
  "/personas/edit/$id": typeof AuthenticatedPersonasEditIdRoute;
  "/projects/edit/$id": typeof AuthenticatedProjectsEditIdRoute;
}

export interface FileRoutesByTo {
  "": typeof AuthenticatedRouteRouteWithChildren;
  "/": typeof UnauthenticatedIndexRoute;
  "/experiments/$id": typeof AuthenticatedExperimentsIdRoute;
  "/personas/$id": typeof AuthenticatedPersonasIdRoute;
  "/personas/create": typeof AuthenticatedPersonasCreateRoute;
  "/projects/$id": typeof AuthenticatedProjectsIdRoute;
  "/projects/create": typeof AuthenticatedProjectsCreateRoute;
  "/personas": typeof AuthenticatedPersonasIndexRoute;
  "/projects": typeof AuthenticatedProjectsIndexRoute;
  "/personas/edit/$id": typeof AuthenticatedPersonasEditIdRoute;
  "/projects/edit/$id": typeof AuthenticatedProjectsEditIdRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_authenticated": typeof AuthenticatedRouteRouteWithChildren;
  "/_unauthenticated": typeof UnauthenticatedRouteRouteWithChildren;
  "/_unauthenticated/": typeof UnauthenticatedIndexRoute;
  "/_authenticated/experiments/$id": typeof AuthenticatedExperimentsIdRoute;
  "/_authenticated/personas/$id": typeof AuthenticatedPersonasIdRoute;
  "/_authenticated/personas/create": typeof AuthenticatedPersonasCreateRoute;
  "/_authenticated/projects/$id": typeof AuthenticatedProjectsIdRoute;
  "/_authenticated/projects/create": typeof AuthenticatedProjectsCreateRoute;
  "/_authenticated/personas/": typeof AuthenticatedPersonasIndexRoute;
  "/_authenticated/projects/": typeof AuthenticatedProjectsIndexRoute;
  "/_authenticated/personas/edit/$id": typeof AuthenticatedPersonasEditIdRoute;
  "/_authenticated/projects/edit/$id": typeof AuthenticatedProjectsEditIdRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ""
    | "/"
    | "/experiments/$id"
    | "/personas/$id"
    | "/personas/create"
    | "/projects/$id"
    | "/projects/create"
    | "/personas"
    | "/projects"
    | "/personas/edit/$id"
    | "/projects/edit/$id";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | ""
    | "/"
    | "/experiments/$id"
    | "/personas/$id"
    | "/personas/create"
    | "/projects/$id"
    | "/projects/create"
    | "/personas"
    | "/projects"
    | "/personas/edit/$id"
    | "/projects/edit/$id";
  id:
    | "__root__"
    | "/_authenticated"
    | "/_unauthenticated"
    | "/_unauthenticated/"
    | "/_authenticated/experiments/$id"
    | "/_authenticated/personas/$id"
    | "/_authenticated/personas/create"
    | "/_authenticated/projects/$id"
    | "/_authenticated/projects/create"
    | "/_authenticated/personas/"
    | "/_authenticated/projects/"
    | "/_authenticated/personas/edit/$id"
    | "/_authenticated/projects/edit/$id";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren;
  UnauthenticatedRouteRoute: typeof UnauthenticatedRouteRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  UnauthenticatedRouteRoute: UnauthenticatedRouteRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_unauthenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/experiments/$id",
        "/_authenticated/personas/$id",
        "/_authenticated/personas/create",
        "/_authenticated/projects/$id",
        "/_authenticated/projects/create",
        "/_authenticated/personas/",
        "/_authenticated/projects/",
        "/_authenticated/personas/edit/$id",
        "/_authenticated/projects/edit/$id"
      ]
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated/route.tsx",
      "children": [
        "/_unauthenticated/"
      ]
    },
    "/_unauthenticated/": {
      "filePath": "_unauthenticated/index.tsx",
      "parent": "/_unauthenticated"
    },
    "/_authenticated/experiments/$id": {
      "filePath": "_authenticated/experiments/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/personas/$id": {
      "filePath": "_authenticated/personas/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/personas/create": {
      "filePath": "_authenticated/personas/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/projects/$id": {
      "filePath": "_authenticated/projects/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/projects/create": {
      "filePath": "_authenticated/projects/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/personas/": {
      "filePath": "_authenticated/personas/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/projects/": {
      "filePath": "_authenticated/projects/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/personas/edit/$id": {
      "filePath": "_authenticated/personas/edit.$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/projects/edit/$id": {
      "filePath": "_authenticated/projects/edit.$id.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
