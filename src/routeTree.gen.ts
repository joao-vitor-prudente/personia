/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthenticatedRouteImport } from './routes/_unauthenticated/route'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as UnauthenticatedIndexImport } from './routes/_unauthenticated/index'
import { Route as AuthenticatedPersonasImport } from './routes/_authenticated/personas'

// Create/Update Routes

const UnauthenticatedRouteRoute = UnauthenticatedRouteImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedIndexRoute = UnauthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UnauthenticatedRouteRoute,
} as any)

const AuthenticatedPersonasRoute = AuthenticatedPersonasImport.update({
  id: '/personas',
  path: '/personas',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/personas': {
      id: '/_authenticated/personas'
      path: '/personas'
      fullPath: '/personas'
      preLoaderRoute: typeof AuthenticatedPersonasImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_unauthenticated/': {
      id: '/_unauthenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof UnauthenticatedIndexImport
      parentRoute: typeof UnauthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteRouteChildren {
  AuthenticatedPersonasRoute: typeof AuthenticatedPersonasRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedPersonasRoute: AuthenticatedPersonasRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface UnauthenticatedRouteRouteChildren {
  UnauthenticatedIndexRoute: typeof UnauthenticatedIndexRoute
}

const UnauthenticatedRouteRouteChildren: UnauthenticatedRouteRouteChildren = {
  UnauthenticatedIndexRoute: UnauthenticatedIndexRoute,
}

const UnauthenticatedRouteRouteWithChildren =
  UnauthenticatedRouteRoute._addFileChildren(UnauthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof UnauthenticatedRouteRouteWithChildren
  '/personas': typeof AuthenticatedPersonasRoute
  '/': typeof UnauthenticatedIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/personas': typeof AuthenticatedPersonasRoute
  '/': typeof UnauthenticatedIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteRouteWithChildren
  '/_authenticated/personas': typeof AuthenticatedPersonasRoute
  '/_unauthenticated/': typeof UnauthenticatedIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/personas' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/personas' | '/'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_authenticated/personas'
    | '/_unauthenticated/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  UnauthenticatedRouteRoute: typeof UnauthenticatedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  UnauthenticatedRouteRoute: UnauthenticatedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_unauthenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/personas"
      ]
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated/route.tsx",
      "children": [
        "/_unauthenticated/"
      ]
    },
    "/_authenticated/personas": {
      "filePath": "_authenticated/personas.tsx",
      "parent": "/_authenticated"
    },
    "/_unauthenticated/": {
      "filePath": "_unauthenticated/index.tsx",
      "parent": "/_unauthenticated"
    }
  }
}
ROUTE_MANIFEST_END */
