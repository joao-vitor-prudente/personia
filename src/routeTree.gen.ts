/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthenticatedRouteImport } from './routes/_unauthenticated/route'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as UnauthenticatedIndexImport } from './routes/_unauthenticated/index'
import { Route as AuthenticatedProjectsImport } from './routes/_authenticated/projects'
import { Route as AuthenticatedPersonasIndexImport } from './routes/_authenticated/personas/index'
import { Route as AuthenticatedPersonasCreateImport } from './routes/_authenticated/personas/create'
import { Route as AuthenticatedPersonasIdImport } from './routes/_authenticated/personas/$id'

// Create/Update Routes

const UnauthenticatedRouteRoute = UnauthenticatedRouteImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedIndexRoute = UnauthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UnauthenticatedRouteRoute,
} as any)

const AuthenticatedProjectsRoute = AuthenticatedProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedPersonasIndexRoute = AuthenticatedPersonasIndexImport.update(
  {
    id: '/personas/',
    path: '/personas/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedPersonasCreateRoute =
  AuthenticatedPersonasCreateImport.update({
    id: '/personas/create',
    path: '/personas/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedPersonasIdRoute = AuthenticatedPersonasIdImport.update({
  id: '/personas/$id',
  path: '/personas/$id',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/projects': {
      id: '/_authenticated/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthenticatedProjectsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_unauthenticated/': {
      id: '/_unauthenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof UnauthenticatedIndexImport
      parentRoute: typeof UnauthenticatedRouteImport
    }
    '/_authenticated/personas/$id': {
      id: '/_authenticated/personas/$id'
      path: '/personas/$id'
      fullPath: '/personas/$id'
      preLoaderRoute: typeof AuthenticatedPersonasIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/personas/create': {
      id: '/_authenticated/personas/create'
      path: '/personas/create'
      fullPath: '/personas/create'
      preLoaderRoute: typeof AuthenticatedPersonasCreateImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/personas/': {
      id: '/_authenticated/personas/'
      path: '/personas'
      fullPath: '/personas'
      preLoaderRoute: typeof AuthenticatedPersonasIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteRouteChildren {
  AuthenticatedProjectsRoute: typeof AuthenticatedProjectsRoute
  AuthenticatedPersonasIdRoute: typeof AuthenticatedPersonasIdRoute
  AuthenticatedPersonasCreateRoute: typeof AuthenticatedPersonasCreateRoute
  AuthenticatedPersonasIndexRoute: typeof AuthenticatedPersonasIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedProjectsRoute: AuthenticatedProjectsRoute,
  AuthenticatedPersonasIdRoute: AuthenticatedPersonasIdRoute,
  AuthenticatedPersonasCreateRoute: AuthenticatedPersonasCreateRoute,
  AuthenticatedPersonasIndexRoute: AuthenticatedPersonasIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface UnauthenticatedRouteRouteChildren {
  UnauthenticatedIndexRoute: typeof UnauthenticatedIndexRoute
}

const UnauthenticatedRouteRouteChildren: UnauthenticatedRouteRouteChildren = {
  UnauthenticatedIndexRoute: UnauthenticatedIndexRoute,
}

const UnauthenticatedRouteRouteWithChildren =
  UnauthenticatedRouteRoute._addFileChildren(UnauthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof UnauthenticatedRouteRouteWithChildren
  '/projects': typeof AuthenticatedProjectsRoute
  '/': typeof UnauthenticatedIndexRoute
  '/personas/$id': typeof AuthenticatedPersonasIdRoute
  '/personas/create': typeof AuthenticatedPersonasCreateRoute
  '/personas': typeof AuthenticatedPersonasIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/projects': typeof AuthenticatedProjectsRoute
  '/': typeof UnauthenticatedIndexRoute
  '/personas/$id': typeof AuthenticatedPersonasIdRoute
  '/personas/create': typeof AuthenticatedPersonasCreateRoute
  '/personas': typeof AuthenticatedPersonasIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteRouteWithChildren
  '/_authenticated/projects': typeof AuthenticatedProjectsRoute
  '/_unauthenticated/': typeof UnauthenticatedIndexRoute
  '/_authenticated/personas/$id': typeof AuthenticatedPersonasIdRoute
  '/_authenticated/personas/create': typeof AuthenticatedPersonasCreateRoute
  '/_authenticated/personas/': typeof AuthenticatedPersonasIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/projects'
    | '/'
    | '/personas/$id'
    | '/personas/create'
    | '/personas'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/projects'
    | '/'
    | '/personas/$id'
    | '/personas/create'
    | '/personas'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_authenticated/projects'
    | '/_unauthenticated/'
    | '/_authenticated/personas/$id'
    | '/_authenticated/personas/create'
    | '/_authenticated/personas/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  UnauthenticatedRouteRoute: typeof UnauthenticatedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  UnauthenticatedRouteRoute: UnauthenticatedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_unauthenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/projects",
        "/_authenticated/personas/$id",
        "/_authenticated/personas/create",
        "/_authenticated/personas/"
      ]
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated/route.tsx",
      "children": [
        "/_unauthenticated/"
      ]
    },
    "/_authenticated/projects": {
      "filePath": "_authenticated/projects.tsx",
      "parent": "/_authenticated"
    },
    "/_unauthenticated/": {
      "filePath": "_unauthenticated/index.tsx",
      "parent": "/_unauthenticated"
    },
    "/_authenticated/personas/$id": {
      "filePath": "_authenticated/personas/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/personas/create": {
      "filePath": "_authenticated/personas/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/personas/": {
      "filePath": "_authenticated/personas/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
